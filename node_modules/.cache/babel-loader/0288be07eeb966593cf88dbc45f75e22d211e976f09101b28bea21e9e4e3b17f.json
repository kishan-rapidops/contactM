{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishan.singh/Desktop/ContactM/src/components/Admin/Contacts.js\",\n  _s = $RefreshSig$();\nimport './Contact.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Noteitem\n} = require('../Noteitem');\nconst {\n  useParams\n} = require(\"react-router-dom\");\nconst {\n  useEffect,\n  useState\n} = require(\"react\");\nexport const Contacts = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [notes, setNotes] = useState([]);\n  const getUserContacts = async id => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_HOSTURL}/api/admin/fetchcontact/${id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      setNotes(json);\n      // console.log(json);\n    } catch (error) {\n      console.error(\"Error fetching user details:\", error.message);\n    }\n  };\n  useEffect(() => {\n    getUserContacts(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact_container\",\n      children: [notes.length === 0 && 'No notes to display. Please Add Some Notes ! ', notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(Noteitem, {\n          note: note\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Contacts, \"cffW6yQ8dGFqHVRjDpSgyK94/3A=\", false, function () {\n  return [useParams];\n});\n_c = Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","Noteitem","require","useParams","useEffect","useState","Contacts","_s","id","notes","setNotes","getUserContacts","response","fetch","process","env","REACT_APP_HOSTURL","method","headers","localStorage","getItem","json","error","console","message","children","className","length","map","note","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ad.rapidops.com/kishan.singh/Desktop/ContactM/src/components/Admin/Contacts.js"],"sourcesContent":["import './Contact.css';\nconst { Noteitem } = require('../Noteitem');\nconst { useParams } = require(\"react-router-dom\");\nconst { useEffect, useState } = require(\"react\");\n\nexport const Contacts = () => {\n    const { id } = useParams();\n    const [notes, setNotes] = useState([]);\n\n    const getUserContacts = async (id) => {\n        try {\n            const response = await fetch(`${process.env.REACT_APP_HOSTURL}/api/admin/fetchcontact/${id}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"auth-token\": localStorage.getItem('token'),\n                },\n            });\n\n            const json = await response.json();\n            setNotes(json);\n            // console.log(json);\n        } catch (error) {\n            console.error(\"Error fetching user details:\", error.message);\n        }\n    }\n\n    useEffect(() => {\n        getUserContacts(id);\n    }, []);\n\n    return (\n        <>\n            {/* <div className='all_contacts'>\n                <h1>Your Contacts : </h1>\n                <Link to=\"/addnote\" className=\"add-contact-button\">\n                    + Add a Contact\n                </Link>\n            </div> */}\n            \n            <div className='contact_container'>\n                {notes.length === 0 && 'No notes to display. Please Add Some Notes ! '}\n            {notes.map((note) => {\n                return <Noteitem key={note._id} note={note} />\n                        \n            })}\n            \n            </div>\n        </>\n    )\n}\n\n"],"mappings":";;AAAA,OAAO,eAAe;AAAC,SAAAA,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACvB,MAAM;EAAEC;AAAS,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC3C,MAAM;EAAEC;AAAU,CAAC,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAM;EAAEE,SAAS;EAAEC;AAAS,CAAC,GAAGH,OAAO,CAAC,OAAO,CAAC;AAEhD,OAAO,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMM,eAAe,GAAG,MAAOH,EAAE,IAAK;IAClC,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,2BAA2BR,EAAE,EAAE,EAAE;QAC1FS,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC9C;MACJ,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCX,QAAQ,CAACW,IAAI,CAAC;MACd;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAChE;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZO,eAAe,CAACH,EAAE,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eAQI3B,OAAA;MAAK4B,SAAS,EAAC,mBAAmB;MAAAD,QAAA,GAC7BhB,KAAK,CAACkB,MAAM,KAAK,CAAC,IAAI,+CAA+C,EACzElB,KAAK,CAACmB,GAAG,CAAEC,IAAI,IAAK;QACjB,oBAAO/B,OAAA,CAACG,QAAQ;UAAgB4B,IAAI,EAAEA;QAAK,GAArBA,IAAI,CAACC,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAElD,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG;EAAC,gBACR,CAAC;AAEX,CAAC;AAAA3B,EAAA,CA7CYD,QAAQ;EAAA,QACFH,SAAS;AAAA;AAAAgC,EAAA,GADf7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}