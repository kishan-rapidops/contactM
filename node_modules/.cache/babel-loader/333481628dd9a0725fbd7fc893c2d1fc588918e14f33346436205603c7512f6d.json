{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/kishan.singh/Desktop/ContactM/src/components/Admin/Groups.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport './Group.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Groups = () => {\n  _s();\n  const navigate = useNavigate();\n  const [groups, setGroups] = useState([]);\n  const [users, setUsers] = useState([]); // Store users to add to a group\n  const [selectedUsers, setSelectedUsers] = useState([]); // Store selected users\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal to create a group\n  const [isUserModalOpen, setIsUserModalOpen] = useState(false); // Modal to add users to a group\n  const [groupName, setGroupName] = useState('');\n  const [currentGroupId, setCurrentGroupId] = useState(null); // State for storing current group ID\n  const [permission, setPermission] = useState('CRUD');\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setGroupName('');\n  };\n  const openUserModal = groupId => {\n    setIsUserModalOpen(true);\n    setSelectedUsers([]); // Reset selected users\n    setCurrentGroupId(groupId); // Set the current group ID when opening the modal\n  };\n  const closeUserModal = () => setIsUserModalOpen(false);\n  const handleGroupCreation = async () => {\n    if (!groupName) {\n      alert(\"Group name is required\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://www.localhost:5000/api/group/creategroup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          name: groupName\n        })\n      });\n      const json = await response.json();\n      // console.log(json);\n      if (json.status === 200) {\n        setGroups(prevGroups => [...prevGroups, json]);\n        closeModal();\n      }\n    } catch (error) {\n      console.error('Error creating group:', error.message);\n    }\n  };\n  const handleUserSelection = (e, userId) => {\n    if (e.target.checked) {\n      setSelectedUsers([...selectedUsers, userId]);\n    } else {\n      setSelectedUsers(selectedUsers.filter(id => id !== userId));\n    }\n  };\n\n  // Function to handle permission change\n  const handlePermissionChange = (p, flg) => {\n    if (flg) {\n      setPermission(permission + p);\n    } else {\n      setPermission(permission.replace(p, ''));\n    }\n    console.log(permission, p, flg);\n  };\n  const handleAddUsersToGroup = async () => {\n    if (selectedUsers.length === 0) {\n      alert(\"Please select at least one user\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://www.localhost:5000/api/group/addusertogroup/${currentGroupId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          users: selectedUsers,\n          permission: permission\n        })\n      });\n      const json = await response.json();\n      if (json) {\n        setGroups(groups.map(group => group._id === currentGroupId ? {\n          ...group,\n          users: json.users\n        } : group));\n        closeUserModal(); // Close the user modal after successful addition\n        toast.success('Users added to group successfully!');\n      }\n    } catch (error) {\n      toast.error(`Error adding users: ${error.message}`);\n    }\n  };\n  const handleDelGroup = async groupId => {\n    console.log('deleting');\n    try {\n      const response = await fetch(`http://www.localhost:5000/api/group/deletegroup/${groupId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      });\n      fetchPersonalGroups();\n      toast.success('Group deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting group:', error.message);\n    }\n  };\n  const fetchGroups = async () => {\n    try {\n      const response = await fetch(`http://www.localhost:5000/api/group/fetchallgroups`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      setGroups(json);\n    } catch (error) {\n      toast.error(`Error fetching groups:${error.message}`);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch(`http://www.localhost:5000/api/admin/fetchalluser`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      if (json.error) {\n        toast.error(`Error fetching users: ${json.message}`);\n      } else {\n        setUsers(json);\n      }\n    } catch (error) {\n      toast.error(`Error fetching users:  ${error.message}`);\n    }\n  };\n  const fetchPersonalGroups = async () => {\n    try {\n      const response = await fetch(`http://www.localhost:5000/api/group/fetchpersonalgroups`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': localStorage.getItem('token')\n        }\n      });\n      const json = await response.json();\n      console.log(json);\n      setGroups(json);\n    } catch (e) {\n      console.error('Error fetching personal groups:', e.message);\n    }\n  };\n  useEffect(() => {\n    if (localStorage.getItem('role') == 'admin') {\n      fetchGroups();\n      fetchUsers();\n    } else {\n      fetchPersonalGroups();\n      fetchUsers();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"groups-page-header\",\n      children: \"Group List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-group-btn\",\n      onClick: openModal,\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), groups.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No groups found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"groups-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Group Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Group Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Group Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Add Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: groups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: group.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: group.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"view-contact-btn\",\n              onClick: () => navigate(`/group/contact/${group._id}`),\n              children: \"View Contacts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-user-btn\",\n              onClick: () => openUserModal(group._id),\n              children: \" + Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-group-btn\",\n              onClick: () => handleDelGroup(group._id) //  delete handler\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 41\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }, this)]\n        }, group._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-header\",\n          children: \"Create New Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"modal-input\",\n          type: \"text\",\n          placeholder: \"Group Name\",\n          value: groupName,\n          onChange: e => setGroupName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-action-btn\",\n          onClick: handleGroupCreation,\n          children: \"Create Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-cancel-btn\",\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this), isUserModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-header\",\n          children: \"Add Users to Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `user-${user._id}`,\n            onChange: e => handleUserSelection(e, user._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `user-${user._id}`,\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"permissions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Permissions : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this), ['C', 'R', 'U', 'D'].map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"permission-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: permission.includes(p),\n              onChange: permission.includes(p) ? () => handlePermissionChange(p, false) : () => handlePermissionChange(p, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 37\n            }, this), p]\n          }, p, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 33\n          }, this)), permission]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-action-btn\",\n          onClick: handleAddUsersToGroup,\n          children: \"Add Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-cancel-btn\",\n          onClick: closeUserModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n_s(Groups, \"2eDVpnQ85d9kLvEM0eciAwiQKLk=\", false, function () {\n  return [useNavigate];\n});\n_c = Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","toast","jsxDEV","_jsxDEV","Groups","_s","navigate","groups","setGroups","users","setUsers","selectedUsers","setSelectedUsers","isModalOpen","setIsModalOpen","isUserModalOpen","setIsUserModalOpen","groupName","setGroupName","currentGroupId","setCurrentGroupId","permission","setPermission","openModal","closeModal","openUserModal","groupId","closeUserModal","handleGroupCreation","alert","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","name","json","status","prevGroups","error","console","message","handleUserSelection","e","userId","target","checked","filter","id","handlePermissionChange","p","flg","replace","log","handleAddUsersToGroup","length","map","group","_id","success","handleDelGroup","fetchPersonalGroups","fetchGroups","fetchUsers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","date","type","placeholder","value","onChange","user","htmlFor","includes","_c","$RefreshReg$"],"sources":["/home/ad.rapidops.com/kishan.singh/Desktop/ContactM/src/components/Admin/Groups.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport './Group.css';\n\nexport const Groups = () => {\n    const navigate = useNavigate();\n    const [groups, setGroups] = useState([]);\n    const [users, setUsers] = useState([]);  // Store users to add to a group\n    const [selectedUsers, setSelectedUsers] = useState([]);  // Store selected users\n    const [isModalOpen, setIsModalOpen] = useState(false);  // Modal to create a group\n    const [isUserModalOpen, setIsUserModalOpen] = useState(false);  // Modal to add users to a group\n    const [groupName, setGroupName] = useState('');\n    const [currentGroupId, setCurrentGroupId] = useState(null);  // State for storing current group ID\n    const [permission, setPermission] = useState('CRUD');\n\n\n\n    const openModal = () => setIsModalOpen(true);\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setGroupName('');\n    };\n\n    const openUserModal = (groupId) => {\n        setIsUserModalOpen(true);\n        setSelectedUsers([]);  // Reset selected users\n        setCurrentGroupId(groupId);  // Set the current group ID when opening the modal\n    };\n\n    const closeUserModal = () => setIsUserModalOpen(false);\n\n    const handleGroupCreation = async () => {\n        if (!groupName) {\n            alert(\"Group name is required\");\n            return;\n        }\n\n        try {\n            const response = await fetch(`http://www.localhost:5000/api/group/creategroup`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n                body: JSON.stringify({ name: groupName }),\n            });\n\n            const json = await response.json();\n            // console.log(json);\n            if (json.status === 200) {\n                setGroups((prevGroups) => [...prevGroups, json]);\n                closeModal();\n            }\n        } catch (error) {\n            console.error('Error creating group:', error.message);\n        }\n    };\n\n    const handleUserSelection = (e, userId) => {\n        if (e.target.checked) {\n            setSelectedUsers([...selectedUsers, userId]);\n        } else {\n            setSelectedUsers(selectedUsers.filter(id => id !== userId));\n        }\n    };\n\n    // Function to handle permission change\n    const handlePermissionChange = (p, flg) => {\n        if (flg) {\n            setPermission(permission + p);\n        } else {\n            setPermission(permission.replace(p, ''));\n        }\n        console.log(permission, p, flg);\n\n    }\n\n\n    const handleAddUsersToGroup = async () => {\n        if (selectedUsers.length === 0) {\n            alert(\"Please select at least one user\");\n            return;\n        }\n\n        try {\n            const response = await fetch(`http://www.localhost:5000/api/group/addusertogroup/${currentGroupId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n                body: JSON.stringify({ users: selectedUsers, permission: permission }),\n            });\n\n            const json = await response.json();\n\n            if (json) {\n                setGroups(groups.map(group =>\n                    group._id === currentGroupId ? { ...group, users: json.users } : group\n                ));\n                closeUserModal();  // Close the user modal after successful addition\n                toast.success('Users added to group successfully!');\n            }\n        } catch (error) {\n            toast.error(`Error adding users: ${error.message}`);\n        }\n    };\n\n    const handleDelGroup = async (groupId) => {\n        console.log('deleting');\n        try {\n            const response = await fetch(`http://www.localhost:5000/api/group/deletegroup/${groupId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n            });\n\n            fetchPersonalGroups();\n            toast.success('Group deleted successfully!');\n        } catch (error) {\n            console.error('Error deleting group:', error.message);\n        }\n    };\n\n    const fetchGroups = async () => {\n        try {\n            const response = await fetch(`http://www.localhost:5000/api/group/fetchallgroups`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n            });\n            const json = await response.json();\n            setGroups(json);\n        } catch (error) {\n            toast.error(`Error fetching groups:${error.message}`);\n        }\n    };\n\n    const fetchUsers = async () => {\n        try {\n            const response = await fetch(`http://www.localhost:5000/api/admin/fetchalluser`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n            });\n            const json = await response.json();\n            if (json.error) {\n                toast.error(`Error fetching users: ${json.message}`);\n            } else {\n                setUsers(json);\n            }\n        } catch (error) {\n            toast.error(`Error fetching users:  ${error.message}`);\n        }\n    };\n\n    const fetchPersonalGroups = async () => {\n        try {\n            const response = await fetch(`http://www.localhost:5000/api/group/fetchpersonalgroups`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': localStorage.getItem('token'),\n                },\n            });\n            const json = await response.json();\n            console.log(json);\n            setGroups(json);\n        } catch (e) {\n            console.error('Error fetching personal groups:', e.message);\n        }\n    };\n\n    useEffect(() => {\n        \n\n        \n\n\n        if (localStorage.getItem('role') == 'admin') {\n            fetchGroups();\n            fetchUsers();\n        }\n        else {\n            fetchPersonalGroups();\n            fetchUsers();\n        }\n    }, []);\n\n    return (\n        <div className=\"groups-page-container\">\n            <h2 className=\"groups-page-header\">Group List</h2>\n            <button className=\"create-group-btn\" onClick={openModal}>Create Group</button>\n\n            {groups.length === 0 ? (\n                <p>No groups found.</p>\n            ) : (\n\n                <table className=\"groups-table\">\n                    <thead>\n                        <tr>\n                            <th>Group Name</th>\n                            <th>Group Created At</th>\n                            <th>Group Contacts</th>\n                            <th>Add Users</th>  {/* New column to add users */}\n                            <th>Delete Group</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                            {groups.map((group) => (\n                            <tr key={group._id}>\n                                <td>{group.name}</td>\n                                <td>{group.date}</td>\n                                <td>\n                                    <button className='view-contact-btn' onClick={() => navigate(`/group/contact/${group._id}`)}>View Contacts</button>\n                                </td>\n                                <td>\n                                    <button className='add-user-btn' onClick={() => openUserModal(group._id)}> + Add User</button> {/* Add user button */}\n                                </td>\n                                <td>\n                                    <button\n                                        className='delete-group-btn'\n                                        onClick={() => handleDelGroup(group._id)} //  delete handler\n                                    >\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> {/* Font Awesome delete icon */}\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n\n\n\n\n\n\n            )}\n\n            {/* Modal for creating a group */}\n            {isModalOpen && (\n                <div className=\"modal-overlay\">\n                    <div className=\"modal-container\">\n                        <h3 className=\"modal-header\">Create New Group</h3>\n                        <input\n                            className=\"modal-input\"\n                            type=\"text\"\n                            placeholder=\"Group Name\"\n                            value={groupName}\n                            onChange={(e) => setGroupName(e.target.value)}\n                        />\n                        <button className=\"modal-action-btn\" onClick={handleGroupCreation}>Create Group</button>\n                        <button className=\"modal-cancel-btn\" onClick={closeModal}>Cancel</button>\n                    </div>\n                </div>\n            )}\n\n            {/* Modal for adding users to  group  */}\n            {isUserModalOpen && (\n                <div className=\"modal-overlay\">\n                    <div className=\"modal-container\">\n                        <h3 className=\"modal-header\">Add Users to Group</h3>\n                        {users.map((user) => (\n                            <div key={user._id} className=\"user-item\">\n                                <input\n                                    type=\"checkbox\"\n                                    id={`user-${user._id}`}\n                                    onChange={(e) => handleUserSelection(e, user._id)}\n                                />\n                                <label htmlFor={`user-${user._id}`}>{user.name}</label>\n                            </div>\n                        ))}\n\n                        <div className=\"permissions\">\n                            <h4>Permissions : </h4>\n                            {['C', 'R', 'U', 'D'].map(p => (\n                                <label key={p} className='permission-label'>\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={permission.includes(p)}\n                                        onChange={permission.includes(p) ? () => handlePermissionChange(p, false) : () => handlePermissionChange(p, true)}\n                                    />\n                                    {p}\n                                </label>\n                            ))}\n                            {permission}\n                        </div>\n\n                        <button className=\"modal-action-btn\" onClick={handleAddUsersToGroup}>Add Users</button>\n                        <button className=\"modal-cancel-btn\" onClick={closeUserModal}>Cancel</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}